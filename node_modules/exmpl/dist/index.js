var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// index.tsx
import React6 from "react";
import npmIcon from "../asset/npm.svg";
import githubIcon from "../asset/github.png";

// markup/Code.tsx
import React from "react";
var codeStyles = {
  fontFamily: "monospace",
  lineHeight: "120%",
  padding: 10,
  overflow: "auto",
  background: "#EEEEEE"
};
var Code = (_a) => {
  var _b = _a, {
    style = {},
    children
  } = _b, props = __objRest(_b, [
    "style",
    "children"
  ]);
  return /* @__PURE__ */ React.createElement("pre", __spreadValues({
    style: __spreadValues(__spreadValues({}, codeStyles), style)
  }, props), children);
};

// markup/Button.tsx
import React2 from "react";
var styles = {
  background: "black",
  color: "white",
  border: "none",
  cursor: "pointer",
  paddingLeft: 10,
  paddingRight: 10,
  height: 40
};
var Button = (_a) => {
  var _b = _a, { type, style = {} } = _b, props = __objRest(_b, ["type", "style"]);
  return /* @__PURE__ */ React2.createElement("button", __spreadValues({
    style: __spreadValues(__spreadValues({}, styles), style),
    type: type != null ? type : "button"
  }, props));
};

// markup/Input.tsx
import React3, { useState, useEffect } from "react";
var wrapperStyles = {
  display: "inline-flex",
  verticalAlign: "top",
  justifyContent: "center",
  flexDirection: "column",
  background: "#EEEEEE",
  paddingLeft: 3,
  paddingRight: 3,
  height: 40
};
var labelStyles = {
  fontSize: 10,
  marginLeft: 3,
  marginBottom: 2
};
var inputStyles = {
  border: "none",
  background: "none",
  outline: "none"
};
var generateRandomID = () => Math.random().toString(36).substr(2, 9);
var Input = (_a) => {
  var _b = _a, {
    id = generateRandomID(),
    value,
    style = {},
    onChange,
    onValue
  } = _b, props = __objRest(_b, [
    "id",
    "value",
    "style",
    "onChange",
    "onValue"
  ]);
  var _a2;
  const [currentValue, setCurrentValue] = useState(value != null ? value : "");
  useEffect(() => {
    setCurrentValue(value);
  }, [value]);
  return /* @__PURE__ */ React3.createElement("div", {
    style: __spreadValues(__spreadValues({}, wrapperStyles), style)
  }, /* @__PURE__ */ React3.createElement("label", {
    htmlFor: id,
    style: labelStyles
  }, (_a2 = props.label) != null ? _a2 : props.placeholder), /* @__PURE__ */ React3.createElement("input", __spreadProps(__spreadValues({
    id,
    style: inputStyles
  }, props), {
    value: currentValue,
    onChange: (event) => {
      setCurrentValue(event.target.value);
      if (onValue) {
        onValue(event.target.value);
      }
      if (onChange && typeof onChange === "function") {
        onChange(event);
      }
    }
  })));
};

// markup/Grid.tsx
import React4 from "react";
var wrapperStyle = {
  display: "flex",
  flexDirection: window.innerWidth < 750 ? "column" : "row"
};
var elementStyle = {
  flex: "1 1 0%"
};
var Grid = (_a) => {
  var _b = _a, { style = {}, children } = _b, props = __objRest(_b, ["style", "children"]);
  if (!children || !Array.isArray(children) || children.length === 0) {
    return null;
  }
  if (children.length === 1) {
    return /* @__PURE__ */ React4.createElement("div", {
      style: __spreadValues(__spreadValues({}, wrapperStyle), style)
    }, children);
  }
  return /* @__PURE__ */ React4.createElement("div", __spreadValues({
    style: __spreadValues(__spreadValues({}, wrapperStyle), style)
  }, props), /* @__PURE__ */ React4.createElement("div", {
    style: elementStyle
  }, children[0]), /* @__PURE__ */ React4.createElement("div", {
    style: elementStyle
  }, children[1]));
};

// markup/Tabs.tsx
import React5, { useState as useState2 } from "react";
var wrapperStyle2 = {
  display: "flex",
  justifyContent: "space-between"
};
var buttonStyles = (active) => ({
  background: "none",
  border: "none",
  outline: "none",
  fontWeight: active ? "bold" : "normal",
  cursor: active ? "auto" : "pointer",
  padding: "10px 0"
});
var Tabs = (_a) => {
  var _b = _a, {
    labels,
    children,
    initialTab = 0,
    style = {},
    onChange
  } = _b, props = __objRest(_b, [
    "labels",
    "children",
    "initialTab",
    "style",
    "onChange"
  ]);
  const [index, setIndex] = useState2(initialTab);
  if (!children || !Array.isArray(children) || children.length === 0) {
    return null;
  }
  const content = index in children ? children[index] : /* @__PURE__ */ React5.createElement("p", null, "Content not found.");
  return /* @__PURE__ */ React5.createElement(React5.Fragment, null, /* @__PURE__ */ React5.createElement("div", __spreadValues({
    style: __spreadValues(__spreadValues({}, wrapperStyle2), style)
  }, props), labels.map((label, currentIndex) => /* @__PURE__ */ React5.createElement("button", {
    key: currentIndex,
    type: "button",
    style: buttonStyles(currentIndex === index),
    onClick: () => {
      setIndex(currentIndex);
      if (typeof onChange === "function") {
        onChange(labels[currentIndex], currentIndex);
      }
    }
  }, label))), content);
};

// index.tsx
var Title = ({ title }) => {
  if (typeof title === "string") {
    return /* @__PURE__ */ React6.createElement("h1", null, title);
  }
  return title;
};
var wrapperStyles2 = {
  fontFamily: "sans-serif",
  maxWidth: window.innerWidth < 750 ? "95vw" : "75vw",
  margin: "0 auto"
};
var headerStyles = { display: "flex" };
var navStyles = {
  display: "flex",
  flex: 1,
  justifyContent: "flex-end",
  alignItems: "center",
  flexWrap: "wrap"
};
var linkStyles = (end) => ({
  width: 30,
  height: 30,
  marginLeft: end ? 0 : 10,
  display: "block"
});
var Exmpl = ({
  title = "Demo",
  npm,
  github,
  icons,
  children
}) => /* @__PURE__ */ React6.createElement("div", {
  style: wrapperStyles2
}, /* @__PURE__ */ React6.createElement("header", {
  style: headerStyles
}, /* @__PURE__ */ React6.createElement(Title, {
  title
}), /* @__PURE__ */ React6.createElement("nav", {
  style: navStyles
}, icons, npm && /* @__PURE__ */ React6.createElement("a", {
  href: `https://npmjs.com/${npm}`
}, /* @__PURE__ */ React6.createElement("img", {
  alt: "npm Link",
  style: linkStyles(true),
  src: npmIcon
})), github && /* @__PURE__ */ React6.createElement("a", {
  href: `https://github.com/${github}`
}, /* @__PURE__ */ React6.createElement("img", {
  alt: "github Link",
  style: linkStyles(false),
  src: githubIcon
})))), children);
export {
  Button,
  Code,
  Exmpl,
  Grid,
  Input,
  Tabs
};
//# sourceMappingURL=index.js.map
