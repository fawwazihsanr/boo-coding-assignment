{
  "version": 3,
  "sources": ["../index.tsx", "../markup/Code.tsx", "../markup/Button.tsx", "../markup/Input.tsx", "../markup/Grid.tsx", "../markup/Tabs.tsx"],
  "sourcesContent": ["import React, { ReactNode, ReactChild, ReactElement } from 'react'\n// Relative to dist folder after build.\nimport npmIcon from '../asset/npm.svg'\nimport githubIcon from '../asset/github.png'\n\nexport { Code } from './markup/Code'\nexport { Button } from './markup/Button'\nexport { Input } from './markup/Input'\nexport { Grid } from './markup/Grid'\nexport { Tabs } from './markup/Tabs'\n\nconst Title = ({ title }: { title: ReactChild }) => {\n  if (typeof title === 'string') {\n    return <h1>{title}</h1>\n  }\n\n  return title as ReactElement\n}\n\nconst wrapperStyles = {\n  fontFamily: 'sans-serif',\n  maxWidth: window.innerWidth < 750 ? '95vw' : '75vw',\n  margin: '0 auto',\n}\n\nconst headerStyles = { display: 'flex' }\n\nconst navStyles = {\n  display: 'flex',\n  flex: 1,\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  flexWrap: 'wrap' as 'wrap',\n}\n\nconst linkStyles = (end: boolean) => ({\n  width: 30,\n  height: 30,\n  marginLeft: end ? 0 : 10,\n  display: 'block',\n})\n\ninterface Props {\n  title?: string | ReactChild\n  npm?: string\n  github?: string\n  icons?: ReactChild\n  children: ReactNode\n}\n\nexport const Exmpl = ({\n  title = 'Demo',\n  npm,\n  github,\n  icons,\n  children,\n}: Props) => (\n  <div style={wrapperStyles}>\n    <header style={headerStyles}>\n      <Title title={title} />\n      <nav style={navStyles}>\n        {icons}\n        {npm && (\n          <a href={`https://npmjs.com/${npm}`}>\n            <img alt=\"npm Link\" style={linkStyles(true)} src={npmIcon} />\n          </a>\n        )}\n        {github && (\n          <a href={`https://github.com/${github}`}>\n            <img alt=\"github Link\" style={linkStyles(false)} src={githubIcon} />\n          </a>\n        )}\n      </nav>\n    </header>\n    {children}\n  </div>\n)\n", "import React from 'react'\n\nconst codeStyles = {\n  fontFamily: 'monospace',\n  // Firefox has less line height otherwise.\n  lineHeight: '120%',\n  padding: 10,\n  overflow: 'auto',\n  background: '#EEEEEE',\n}\n\ntype PreProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLPreElement>,\n  HTMLPreElement\n>\n\nexport const Code = ({\n  style = {},\n  children,\n  ...props\n}: PreProps & { children: string }) => (\n  <pre style={{ ...codeStyles, ...style }} {...props}>\n    {children}\n  </pre>\n)\n", "import React from 'react'\n\nconst styles = {\n  background: 'black',\n  color: 'white',\n  border: 'none',\n  cursor: 'pointer',\n  paddingLeft: 10,\n  paddingRight: 10,\n  height: 40,\n}\n\ntype ButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>\n\nexport const Button = ({ type, style = {}, ...props }: ButtonProps) => (\n  // eslint-disable-next-line react/button-has-type\n  <button style={{ ...styles, ...style }} type={type ?? 'button'} {...props} />\n)\n", "import React, { CSSProperties, useState, useEffect } from 'react'\n\nconst wrapperStyles: CSSProperties = {\n  display: 'inline-flex',\n  verticalAlign: 'top',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  background: '#EEEEEE',\n  paddingLeft: 3,\n  paddingRight: 3,\n  height: 40,\n}\n\nconst labelStyles = {\n  fontSize: 10,\n  marginLeft: 3,\n  marginBottom: 2,\n}\n\nconst inputStyles = {\n  border: 'none',\n  // borderBottom: '1px solid black',\n  background: 'none',\n  outline: 'none',\n}\n\nconst generateRandomID = () => Math.random().toString(36).substr(2, 9)\n\ntype InputProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>\n\nexport const Input = ({\n  id = generateRandomID(),\n  value,\n  style = {},\n  onChange,\n  onValue,\n  ...props\n}: InputProps & { label?: string; onValue?: (value: any) => void }) => {\n  const [currentValue, setCurrentValue] = useState(value ?? '')\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value])\n\n  return (\n    <div style={{ ...wrapperStyles, ...style }}>\n      <label htmlFor={id} style={labelStyles}>\n        {props.label ?? props.placeholder}\n      </label>\n      <input\n        id={id}\n        style={inputStyles}\n        {...props}\n        value={currentValue}\n        onChange={(event) => {\n          setCurrentValue(event.target.value)\n\n          if (onValue) {\n            onValue(event.target.value)\n          }\n\n          if (onChange && typeof onChange === 'function') {\n            onChange(event)\n          }\n        }}\n      />\n    </div>\n  )\n}\n", "import React, { CSSProperties } from 'react'\n\nconst wrapperStyle: CSSProperties = {\n  display: 'flex',\n  flexDirection: window.innerWidth < 750 ? 'column' : 'row',\n}\n\nconst elementStyle = {\n  flex: '1 1 0%',\n}\n\ntype Props = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>\n\nexport const Grid = ({ style = {}, children, ...props }: Props) => {\n  if (!children || !Array.isArray(children) || children.length === 0) {\n    return null\n  }\n\n  if (children.length === 1) {\n    return <div style={{ ...wrapperStyle, ...style }}>{children}</div>\n  }\n\n  return (\n    <div style={{ ...wrapperStyle, ...style }} {...props}>\n      <div style={elementStyle}>{children[0]}</div>\n      <div style={elementStyle}>{children[1]}</div>\n    </div>\n  )\n}\n", "import React, { useState, CSSProperties } from 'react'\n\nconst wrapperStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n}\n\nconst buttonStyles = (active: boolean) =>\n  ({\n    background: 'none',\n    border: 'none',\n    outline: 'none',\n    fontWeight: active ? 'bold' : 'normal',\n    cursor: active ? 'auto' : 'pointer',\n    padding: '10px 0',\n  } as CSSProperties)\n\ntype DivProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>\n\ntype CustomDivProps = Omit<DivProps, 'onChange'>\n\ntype Props = {\n  labels: string[]\n  initialTab?: number\n  onChange?: (label: string, index: number) => void\n} & CustomDivProps\n\nexport const Tabs = ({\n  labels,\n  children,\n  initialTab = 0,\n  style = {},\n  onChange,\n  ...props\n}: Props) => {\n  const [index, setIndex] = useState(initialTab)\n\n  if (!children || !Array.isArray(children) || children.length === 0) {\n    return null\n  }\n\n  const content =\n    index in children ? children[index] : <p>Content not found.</p>\n\n  return (\n    <>\n      <div style={{ ...wrapperStyle, ...style }} {...props}>\n        {labels.map((label, currentIndex) => (\n          <button\n            key={currentIndex}\n            type=\"button\"\n            style={buttonStyles(currentIndex === index)}\n            onClick={() => {\n              setIndex(currentIndex)\n\n              if (typeof onChange === 'function') {\n                onChange(labels[currentIndex], currentIndex)\n              }\n            }}\n          >\n            {label}\n          </button>\n        ))}\n      </div>\n      {content}\n    </>\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
